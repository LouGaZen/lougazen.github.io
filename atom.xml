<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Apocalypse</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lougazen.github.io/"/>
  <updated>2019-12-18T12:50:37.189Z</updated>
  <id>http://lougazen.github.io/</id>
  
  <author>
    <name>LouGaZen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通过brew cask安装指定版本的应用</title>
    <link href="http://lougazen.github.io/2019/12/17/%E9%80%9A%E8%BF%87brew-cask%E5%AE%89%E8%A3%85%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://lougazen.github.io/2019/12/17/通过brew-cask安装指定版本的应用/</id>
    <published>2019-12-17T14:58:25.000Z</published>
    <updated>2019-12-18T12:50:37.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近在全新安装DataGrip(2019.3)的时候发现使用以前的洗白工具无法输入序列号，但是从2019.2版本升上来的idea和webstorm却能正常使用。作为一名idea系列的重度使（bai）用（piao）者实在是难受，首先想到的办法就是安装一个旧版本的DataGrip。但是Cask却不像Formulae通过一个@就能指定版本号，需要另辟蹊径。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>先把DataGrip完全卸载<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/17/cEWU3ZDBgvsYKHt.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>然后执行一波<code>brew update</code>避免待会配置文件被覆盖</p><h1 id="寻找旧版应用的版本号及sha256信息"><a href="#寻找旧版应用的版本号及sha256信息" class="headerlink" title="寻找旧版应用的版本号及sha256信息"></a>寻找旧版应用的版本号及sha256信息</h1><p>对于大多数开发工具来说官网都会给出旧版的软件版本号或者下载地址等其他信息，如果有sha256值提供就在好不过了，可惜<a href="https://www.jetbrains.com/datagrip/download/other.html" target="_blank" rel="noopener">DataGrip</a>没有给出，只好下载回来自己算sha256</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/17/QNCOB5ZTRifz3Mu.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/17/gVTJ1B6ewIvcLus.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="替换目标软件的Cask下载源地址"><a href="#替换目标软件的Cask下载源地址" class="headerlink" title="替换目标软件的Cask下载源地址"></a>替换目标软件的Cask下载源地址</h1><p>执行<code>brew cask edit datagrip</code>就会在默认编辑器打开这个软件的配置文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/17/UnozwtJDTMFXYh9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们主要改的是红框中的两个信息，把它替换成指定版本的应用信息，保存退出</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/17/r569XZWOVjmcEwo.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/17/tLVYFqg8nT2bKGz.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>很明显这个配置文件所在的目录是个git仓库，所以改错了不用怕，到时候一波<code>git reset --hard</code>即可复原</p><h1 id="执行安装命令"><a href="#执行安装命令" class="headerlink" title="执行安装命令"></a>执行安装命令</h1><p>这个时候执行<code>brew cask install datagrip</code>，顺利的话就会自动下载旧版本并且顺利安装<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/17/oaHz1MYjsRQ9wp6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><blockquote><p><a href="https://zeckli.github.io/en/2016/11/05/use-homebrew-cask-to-downgrad-or-install-en.html" target="_blank" rel="noopener">Use Homebrew Cask to downgrade or install specific version of package</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h1&gt;&lt;p&gt;最近在全新安装DataGrip(2019.3)的时候发现使用以前的洗白工具无法输入序列号，但是从2019.2版本升上来的idea和webstorm却
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>打造Mac下舒适的终端</title>
    <link href="http://lougazen.github.io/2019/12/12/%E6%89%93%E9%80%A0Mac%E4%B8%8B%E8%88%92%E9%80%82%E7%9A%84%E7%BB%88%E7%AB%AF/"/>
    <id>http://lougazen.github.io/2019/12/12/打造Mac下舒适的终端/</id>
    <published>2019-12-12T15:54:46.000Z</published>
    <updated>2019-12-16T15:28:43.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>拖延症拖了一年终于要开始打造自己的博客了<em>(´ཀ`」 ∠)</em>，先拿最近捣鼓的zsh开刀吧</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p><a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">brew</a>、iTerm2和<a href="https://ohmyz.sh/" target="_blank" rel="noopener">Oh-My-Zsh</a></p><p>使用brew安装nerd-font字体<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap caskroom/fonts</span><br><span class="line">brew cask install font-hack-nerd-font</span><br></pre></td></tr></table></figure></p><p>配置iTerm2针对非ASCII码字符的字体<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/moWqMef9wHILBYU.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="配置zsh主题"><a href="#配置zsh主题" class="headerlink" title="配置zsh主题"></a>配置zsh主题</h1><p>zsh的配置文件存放在<code>~/.zshrc</code>下，看到<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME="robbyrussell"</span><br></pre></td></tr></table></figure></p><p>这一行，这里就是配置主题的地方，默认自带一堆主题放在<code>~/.oh-my-zsh/theme</code>目录下，也可以上<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes" target="_blank" rel="noopener">github</a>上查看各个主题的效果</p><p>当然个人感觉最叼的还是这个<a href="https://github.com/Powerlevel9k/powerlevel9k" target="_blank" rel="noopener">powerlevel9k</a>主题<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/NUrfXGsnjuo8Zxv.gif" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>首先把主题安装到本地<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</span><br></pre></td></tr></table></figure></p><p>修改<code>~/.zshrc</code>的主题配置<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME="powerlevel9k/powerlevel9k"</span><br></pre></td></tr></table></figure></p><p>重新加载zsh使配置生效<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure></p><p>然后提示就变样了（先忽略苹果logo的信息，后面会提到）<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/pCnDS4baKfAdetZ.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>根据自己的喜好配置一下（注意需要加在ZSH_THEME的前面，不然前面说的nerd-font字体会加载不出来），详细可进入p9k的github阅读原文档<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POWERLEVEL9K_MODE="nerdfont-complete"</span><br><span class="line">POWERLEVEL9K<span class="emphasis">_LEFT_</span>PROMPT<span class="emphasis">_ELEMENTS=(os_</span>icon root<span class="emphasis">_indicator context ssh dir_</span>writable dir vcs status)</span><br><span class="line">POWERLEVEL9K<span class="emphasis">_RIGHT_</span>PROMPT_ELEMENTS=()</span><br><span class="line">POWERLEVEL9K<span class="emphasis">_PROMPT_</span>ADD_NEWLINE=true</span><br></pre></td></tr></table></figure></p><ul><li><code>POWERLEVEL9K_MODE</code>：设置 powerlevel9k 的字体是我们前面下载的</li><li><code>POWERLEVEL9K_LEFT_PROMPT_ELEMENTS</code>：将前面居右的几个元素放在左边了</li><li><code>POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS</code>：右边不放置任何元素（如果你喜欢在右边也可以加）</li><li><code>POWERLEVEL9K_PROMPT_ADD_NEWLINE</code>：在每个提示之前添加换行符</li></ul><p>修改完的效果应该是这样子的<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/6xi9PybSLRKcJz3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="配置iTerm2配色"><a href="#配置iTerm2配色" class="headerlink" title="配置iTerm2配色"></a>配置iTerm2配色</h1><p>iTerm2默认黑色还是太丑了，上<a href="https://github.com/mbadolato/iTerm2-Color-Schemes" target="_blank" rel="noopener">这里</a>挑了个Ubuntu主题</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/CynTDgk7PRGXh8f.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>啊舒服了٩(๑´0`๑)۶</p><h1 id="安装zsh插件"><a href="#安装zsh插件" class="headerlink" title="安装zsh插件"></a>安装zsh插件</h1><p>以上那些都是过眼隐的，真正让使用者感到舒服的地方来了</p><p>先列一下我的插件列表</p><ul><li>git</li><li>zsh-syntax-highlighting</li><li>zsh-autosuggestions</li><li>command-not-found</li><li>zsh_reload</li><li>git-open</li><li>z</li><li>safe-paste</li><li>sudo</li><li>extract</li></ul><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p>默认自带，不说</p><h2 id="zsh-syntax-highlighting"><a href="#zsh-syntax-highlighting" class="headerlink" title="zsh-syntax-highlighting"></a>zsh-syntax-highlighting</h2><p>用于显示你当前输入的命令是否正确<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install zsh-syntax-highlighting</span><br></pre></td></tr></table></figure></p><p>正常来讲可以直接把<code>zsh-syntax-highlighting</code>加到配置文件中即可启用，如果出现<code>plugin not found</code>的情况则改用如下方式进行配置<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br></pre></td></tr></table></figure></p><h2 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h2><p>历史记录提示，按➡️方向键自动补全<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install zsh-autosuggestions</span><br></pre></td></tr></table></figure></p><p>跟上一个配置同理，如果出现<code>plugin not found</code>的情况则改用如下方式进行配置<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br></pre></td></tr></table></figure></p><h2 id="command-not-found"><a href="#command-not-found" class="headerlink" title="command-not-found"></a>command-not-found</h2><p>对于command not found的结果会提示一个相似的命令（多出现于拼写错误）</p><h2 id="zsh-reload"><a href="#zsh-reload" class="headerlink" title="zsh_reload"></a>zsh_reload</h2><p>直接执行<code>src</code>即可完成<code>source ~/.zshrc</code>操作</p><h2 id="git-open"><a href="#git-open" class="headerlink" title="git-open"></a>git-open</h2><p>在终端里打开当前项目的远程仓库地址<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/paulirish/git-open.git $ZSH_CUSTOM/plugins/git-open</span><br></pre></td></tr></table></figure></p><h2 id="z"><a href="#z" class="headerlink" title="z"></a>z</h2><p>zsh自带的autojump</p><h2 id="safe-paste"><a href="#safe-paste" class="headerlink" title="safe-paste"></a>safe-paste</h2><p>顾名思义，对于有换行符的内容不会立马执行</p><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><p>双击 Esc，zsh 会把上一条命令加上 sudo 给你</p><h2 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h2><p>万能解压命令</p><h1 id="其他非zsh的插件"><a href="#其他非zsh的插件" class="headerlink" title="其他非zsh的插件"></a>其他非zsh的插件</h1><h2 id="colorls"><a href="#colorls" class="headerlink" title="colorls"></a>colorls</h2><p>列出文件时带图标<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install colorls</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/qrk1oOXgwPUsd4p.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后加个alias到配置文件<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias cll='colorls -l --gs'</span><br></pre></td></tr></table></figure></p><p>以后输入<code>cll</code>即可</p><h2 id="archey"><a href="#archey" class="headerlink" title="archey"></a>archey</h2><p>显示系统信息<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install archey</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/85scRPWveNCi4kM.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后把<code>archey</code>这个命令加到配置文件即可每次打开都显示系统信息</p><p>顺带提一下archey那种图案的生成方式，有两个小工具可以做到，一个是figlet，另一个是toilet<br><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install figlet</span><br><span class="line">brew install toilet</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/12/16/gwlevVHQUCZAFr6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="后记（挖坑）"><a href="#后记（挖坑）" class="headerlink" title="后记（挖坑）"></a>后记（挖坑）</h1><p>这一套下来在iTerm下面使用简直是强无敌，但是考虑还有系统自带的终端及idea和vscode的终端都要配置一遍是在是烦躁，在寻找有没有办法针对不同的shell加载不同的配置文件</p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><blockquote><p><a href="https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html" target="_blank" rel="noopener">打造 Mac 下高颜值好用的终端环境</a><br><a href="https://github.com/ohmyzsh/ohmyzsh" target="_blank" rel="noopener">oh-my-zsh</a><br><a href="https://github.com/Powerlevel9k/powerlevel9k" target="_blank" rel="noopener">powerlevel9k</a><br><a href="https://github.com/mbadolato/iTerm2-Color-Schemes" target="_blank" rel="noopener">iTerm2-Color-Schemes</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h1&gt;&lt;p&gt;拖延症拖了一年终于要开始打造自己的博客了&lt;em&gt;(´ཀ`」 ∠)&lt;/em&gt;，先拿最近捣鼓的zsh开刀吧&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lougazen.github.io/2019/06/03/hello-world/"/>
    <id>http://lougazen.github.io/2019/06/03/hello-world/</id>
    <published>2019-06-03T14:21:31.041Z</published>
    <updated>2019-06-03T14:21:31.041Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
