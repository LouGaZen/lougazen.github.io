{"meta":{"title":"Apocalypse","subtitle":null,"description":null,"author":"LouGaZen","url":"http://lougazen.github.io"},"pages":[{"title":"categories","date":"2018-12-05T04:44:25.000Z","updated":"2019-06-03T14:21:31.042Z","comments":false,"path":"categories/index.html","permalink":"http://lougazen.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-05T03:49:41.000Z","updated":"2019-06-03T14:21:31.042Z","comments":false,"path":"tags/index.html","permalink":"http://lougazen.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"打造Mac下舒适的终端","slug":"打造Mac下舒适的终端","date":"2019-12-12T15:54:46.000Z","updated":"2019-12-16T15:28:43.072Z","comments":true,"path":"2019/12/12/打造Mac下舒适的终端/","link":"","permalink":"http://lougazen.github.io/2019/12/12/打造Mac下舒适的终端/","excerpt":"","text":"序拖延症拖了一年终于要开始打造自己的博客了(´ཀ`」 ∠)，先拿最近捣鼓的zsh开刀吧 准备brew、iTerm2和Oh-My-Zsh 使用brew安装nerd-font字体script12brew tap caskroom/fontsbrew cask install font-hack-nerd-font 配置iTerm2针对非ASCII码字符的字体 配置zsh主题zsh的配置文件存放在~/.zshrc下，看到1ZSH_THEME=\"robbyrussell\" 这一行，这里就是配置主题的地方，默认自带一堆主题放在~/.oh-my-zsh/theme目录下，也可以上github上查看各个主题的效果 当然个人感觉最叼的还是这个powerlevel9k主题 首先把主题安装到本地script1git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k 修改~/.zshrc的主题配置1ZSH_THEME=\"powerlevel9k/powerlevel9k\" 重新加载zsh使配置生效script1source ~/.zshrc 然后提示就变样了（先忽略苹果logo的信息，后面会提到） 根据自己的喜好配置一下（注意需要加在ZSH_THEME的前面，不然前面说的nerd-font字体会加载不出来），详细可进入p9k的github阅读原文档1234POWERLEVEL9K_MODE=\"nerdfont-complete\"POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon root_indicator context ssh dir_writable dir vcs status)POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()POWERLEVEL9K_PROMPT_ADD_NEWLINE=true POWERLEVEL9K_MODE：设置 powerlevel9k 的字体是我们前面下载的 POWERLEVEL9K_LEFT_PROMPT_ELEMENTS：将前面居右的几个元素放在左边了 POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS：右边不放置任何元素（如果你喜欢在右边也可以加） POWERLEVEL9K_PROMPT_ADD_NEWLINE：在每个提示之前添加换行符 修改完的效果应该是这样子的 配置iTerm2配色iTerm2默认黑色还是太丑了，上这里挑了个Ubuntu主题 啊舒服了٩(๑´0`๑)۶ 安装zsh插件以上那些都是过眼隐的，真正让使用者感到舒服的地方来了 先列一下我的插件列表 git zsh-syntax-highlighting zsh-autosuggestions command-not-found zsh_reload git-open z safe-paste sudo extract git默认自带，不说 zsh-syntax-highlighting用于显示你当前输入的命令是否正确script1brew install zsh-syntax-highlighting 正常来讲可以直接把zsh-syntax-highlighting加到配置文件中即可启用，如果出现plugin not found的情况则改用如下方式进行配置1source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh zsh-autosuggestions历史记录提示，按➡️方向键自动补全script1brew install zsh-autosuggestions 跟上一个配置同理，如果出现plugin not found的情况则改用如下方式进行配置1source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh command-not-found对于command not found的结果会提示一个相似的命令（多出现于拼写错误） zsh_reload直接执行src即可完成source ~/.zshrc操作 git-open在终端里打开当前项目的远程仓库地址script1git clone https://github.com/paulirish/git-open.git $ZSH_CUSTOM/plugins/git-open zzsh自带的autojump safe-paste顾名思义，对于有换行符的内容不会立马执行 sudo双击 Esc，zsh 会把上一条命令加上 sudo 给你 extract万能解压命令 其他非zsh的插件colorls列出文件时带图标script1gem install colorls 然后加个alias到配置文件1alias cll='colorls -l --gs' 以后输入cll即可 archey显示系统信息script1brew install archey 然后把archey这个命令加到配置文件即可每次打开都显示系统信息 顺带提一下archey那种图案的生成方式，有两个小工具可以做到，一个是figlet，另一个是toiletscript12brew install figletbrew install toilet 后记（挖坑）这一套下来在iTerm下面使用简直是强无敌，但是考虑还有系统自带的终端及idea和vscode的终端都要配置一遍是在是烦躁，在寻找有没有办法针对不同的shell加载不同的配置文件 鸣谢 打造 Mac 下高颜值好用的终端环境oh-my-zshpowerlevel9kiTerm2-Color-Schemes","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-06-03T14:21:31.041Z","updated":"2019-06-03T14:21:31.041Z","comments":true,"path":"2019/06/03/hello-world/","link":"","permalink":"http://lougazen.github.io/2019/06/03/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}